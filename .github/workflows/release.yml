name: Waffler release

on:
  release:
    types: [published]
    
env:
  REGISTRY: ghcr.io
  OWNER: citouhub
  API_IMAGE_NAME: waffler-api
  WEB_IMAGE_NAME: waffler-web
  API_IMAGE_NAME_ARM64: waffler-api-arm64
  WEB_IMAGE_NAME_ARM64: waffler-web-arm64
  RELEASE_TAG_INPUT: ${{ github.event.release.tag_name }}
  BUILD_ID: ${{ github.run_number }}
  COMMIT_ID: ${{ github.sha }}

jobs:
  build_push_api:
    name: Build and push API image
    runs-on: ubuntu-18.04
      
    steps:
    - uses: actions/checkout@v2
    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_PASSWORD }}

    - name: Build and tag image for API
      run: docker build --tag $REGISTRY/$OWNER/$API_IMAGE_NAME:$RELEASE_TAG_INPUT --build-arg commit_id=$COMMIT_ID --build-arg build_id=$BUILD_ID --build-arg build_tag=$RELEASE_TAG_INPUT . --file Waffler.API/Dockerfile
      
    - name: Tag release image for API as `latest`
      run: docker tag $REGISTRY/$OWNER/$API_IMAGE_NAME:$RELEASE_TAG_INPUT $REGISTRY/$OWNER/$API_IMAGE_NAME:latest

    - name: Push image for API
      run: docker push --all-tags $REGISTRY/$OWNER/$API_IMAGE_NAME

  build_push_web:
    name: Build and push Web image
    runs-on: ubuntu-18.04
      
    steps:
    - uses: actions/checkout@v2.1.0
    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_PASSWORD }}
      
    - name: Build and tag image for Web
      run: docker build --tag $REGISTRY/$OWNER/$WEB_IMAGE_NAME:$RELEASE_TAG_INPUT --build-arg commit_id=$COMMIT_ID --build-arg build_id=$BUILD_ID --build-arg build_tag=$RELEASE_TAG_INPUT . --file Waffler.Web/Dockerfile
      
    - name: Tag release image for Web as `latest`
      run: docker tag $REGISTRY/$OWNER/$WEB_IMAGE_NAME:$RELEASE_TAG_INPUT $REGISTRY/$OWNER/$WEB_IMAGE_NAME:latest

    - name: Push image for Web
      run: docker push --all-tags $REGISTRY/$OWNER/$WEB_IMAGE_NAME
      
  build_push_api_armv7:
    runs-on: ubuntu-18.04
    name: Build and push API image (arm64)
      
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}
          
      - name: Build and tag image for API
        run: docker buildx build --platform linux/arm64 --tag $REGISTRY/$OWNER/$API_IMAGE_NAME_ARM64:$RELEASE_TAG_INPUT --build-arg commit_id=$COMMIT_ID --build-arg build_id=$BUILD_ID --build-arg build_tag=$RELEASE_TAG_INPUT . --file Waffler.API/Dockerfile.arm64
      
      - name: Tag release image for API as `latest`
        run: docker tag $REGISTRY/$OWNER/$API_IMAGE_NAME_ARM64:$RELEASE_TAG_INPUT $REGISTRY/$OWNER/$API_IMAGE_NAME_ARM64:latest

      - name: Push image for API
        run: docker push --all-tags ghcr.io/citou-ab/$API_IMAGE_NAME_ARM64
        
  build_push_web_armv7:
    runs-on: ubuntu-18.04
    name: Build and push Web image (arm64)
      
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}
          
      - name: Build and tag image for Web
        run: docker buildx build --platform linux/arm64 --tag $REGISTRY/$OWNER/$WEB_IMAGE_NAME_ARM64:$RELEASE_TAG_INPUT --build-arg commit_id=$COMMIT_ID --build-arg build_id=$BUILD_ID --build-arg build_tag=$RELEASE_TAG_INPUT . --file Waffler.Web/Dockerfile
      
      - name: Tag release image for Web as `latest`
        run: docker tag $REGISTRY/$OWNER/$WEB_IMAGE_NAME_ARM64:$RELEASE_TAG_INPUT $REGISTRY/$OWNER/$WEB_IMAGE_NAME_ARM64:latest

      - name: Push image for Web
        run: docker push --all-tags $REGISTRY/$OWNER/$WEB_IMAGE_NAME_ARM64
