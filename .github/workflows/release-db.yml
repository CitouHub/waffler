name: Waffler DB

on:
  workflow_dispatch:
    
env:
  REGISTRY: ghcr.io
  OWNER: citou-ab
  DB_IMAGE_NAME: waffler-db
  DB_IMAGE_NAME_ARM64: waffler-db-arm64

jobs:
  build_push_db:
    name: Build and push DB image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.1.0
    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.GHCR_USERNAME }}
        password: ${{ secrets.GHCR_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.DB_IMAGE_NAME }}

    - name: Build and tag image for DB
      run: docker build --tag ghcr.io/citou-ab/$DB_IMAGE_NAME:latest . --file Waffler.Data/Dockerfile --label ${{ steps.meta.outputs.labels }}

    - name: Push image for DB
      run: docker push --all-tags ghcr.io/citou-ab/$DB_IMAGE_NAME
      
  build_push_db_armv7:
    runs-on: ubuntu-18.04
    name: Build and push DB image (arm64)
      
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}
          
      - name: Build and tag image for DB
        run: docker buildx build --platform linux/arm64 --tag $REGISTRY/$OWNER/$DB_IMAGE_NAME_ARM64:latest . --file Waffler.Data/Dockerfile

      - name: Push image for DB
        run: docker push --all-tags $REGISTRY/$OWNER/$DB_IMAGE_NAME_ARM64
