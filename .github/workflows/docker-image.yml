name: Waffler build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    tags:
      - v*
    
env:
  REGISTRY: ghcr.io
  USERNAME: CitouHub
  PASSWORD: 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
  DB_IMAGE_NAME: waffler-db
  API_IMAGE_NAME: waffler-api
  WEB_IMAGE_NAME: waffler-web
  DB_IMAGE_NAME_ARM64: waffler-db-arm64
  API_IMAGE_NAME_ARM64: waffler-api-arm64
  WEB_IMAGE_NAME_ARM64: waffler-web-arm64

jobs:
  build_push_db:
    name: Build and push DB image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.1.0
    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.USERNAME }}
        password: ${{ env.PASSWORD }}

    - name: Build and tag image for DB
      run: docker build --tag ghcr.io/citou-ab/$DB_IMAGE_NAME:latest . --file Waffler.Data/Dockerfile

    - name: Push image for DB
      run: docker push --all-tags ghcr.io/citou-ab/$DB_IMAGE_NAME

  build_push_api:
    name: Build and push API image
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.USERNAME }}
        password: ${{ env.PASSWORD }}

    - name: Build and tag image for API
      run: docker build --tag ghcr.io/citou-ab/$API_IMAGE_NAME:latest . --file Waffler.API/Dockerfile

    - name: Push image for API
      run: docker push --all-tags ghcr.io/citou-ab/$API_IMAGE_NAME

  build_push_web:
    name: Build and push Web image
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2.1.0
    
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.USERNAME }}
        password: ${{ env.PASSWORD }}
      
    - name: Build and tag image for Web
      run: docker build --tag ghcr.io/citou-ab/$WEB_IMAGE_NAME_ARM64:latest . --file Waffler.Web/Dockerfile

    - name: Push image for Web
      run: docker push --all-tags ghcr.io/citou-ab/$WEB_IMAGE_NAME_ARM64
      
  build_push_db_armv7:
    runs-on: ubuntu-18.04
    name: Build and push DB image (arm64)
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          
      - name: Build and tag image for DB
        run: docker buildx build --platform linux/arm64 --tag ghcr.io/citou-ab/$DB_IMAGE_NAME_ARM64:latest . --file Waffler.Data/Dockerfile

      - name: Push image for DB
        run: docker push --all-tags ghcr.io/citou-ab/$DB_IMAGE_NAME_ARM64
      
  build_push_api_armv7:
    runs-on: ubuntu-18.04
    name: Build and push API image (arm64)
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          
      - name: Build and tag image for API (Arm64)
        run: docker build --tag ghcr.io/citou-ab/$API_IMAGE_NAME_ARM64:latest . --file Waffler.API/Dockerfile.arm64

      - name: Push image for API
        run: docker push --all-tags ghcr.io/citou-ab/$API_IMAGE_NAME_ARM64
        
  build_push_web_armv7:
    runs-on: ubuntu-18.04
    name: Build and push Web image (arm64)
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: armv7
          distro: ubuntu18.04
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
      - name: Get the output
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
          
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
          
      - name: Build and tag image for Web (Arm64)
        run: docker build --tag ghcr.io/citou-ab/$WEB_IMAGE_NAME_ARM64:latest . --file Waffler.Web/Dockerfile.arm64

      - name: Push image for Web
        run: docker push --all-tags ghcr.io/citou-ab/$WEB_IMAGE_NAME_ARM64
